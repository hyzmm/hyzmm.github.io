{"title":"CustomSingleChildLayout","uid":"ac9e638e20457c3552fa1b3ae6040913","slug":"flutter-custom_single_child_layout","date":"2021-11-10T19:00:10.000Z","updated":"2022-07-17T12:07:09.348Z","comments":true,"path":"api/articles/flutter-custom_single_child_layout.json","keywords":null,"cover":"https://flutter.cn/assets/images/docs/catalog-widget-placeholder.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>CustomSingleChildLayout</code> 可以使其唯一的子节点的布局遵循一个委托。</p>\n<p>委托可以确定子组件的布局约束，并决定将子组件放置在何处。委托还可以确定父级的大小，但父类的大小不会取决于子类的大小。</p></blockquote>\n<p>在位置超出布局约束后，子节点依然会被渲染，但是它的手势交互还会停留再原地。考虑这样的场景：</p>\n<iframe width=\"100%\" height=\"500\" src=\"https://dartpad.dev/embed-flutter.html?id=9239524e218ede1100f436e8de59e957&run=true&theme=dark\"></iframe>\n\n<p>整体上，视图是列，白色区域固定高度，黄色区域自适应高度，红色圆能够被拖动到布局约束外。红色圆的代码如下：</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">Key</span><span class=\"token operator\">?</span> key<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">State</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circle</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_CircleState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> _CircleState <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Circle</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">ValueNotifier</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>double<span class=\"token punctuation\">></span></span> moveDistance <span class=\"token operator\">=</span> <span class=\"token class-name\">ValueNotifier</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">Widget</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BuildContext</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">const</span> circleSize <span class=\"token operator\">=</span> <span class=\"token number\">70.0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">GestureDetector</span><span class=\"token punctuation\">(</span>\n      behavior<span class=\"token punctuation\">:</span> <span class=\"token class-name\">HitTestBehavior</span><span class=\"token punctuation\">.</span>translucent<span class=\"token punctuation\">,</span>\n      onPanDown<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> moveDistance<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      onPanUpdate<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>details<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        moveDistance<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+=</span> details<span class=\"token punctuation\">.</span>delta<span class=\"token punctuation\">.</span>dy<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      onPanEnd<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        moveDistance<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      child<span class=\"token punctuation\">:</span> <span class=\"token class-name\">ValueListenableBuilder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>double<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>\n          valueListenable<span class=\"token punctuation\">:</span> moveDistance<span class=\"token punctuation\">,</span>\n          builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">,</span> dis<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">CustomSingleChildLayout</span><span class=\"token punctuation\">(</span>\n              delegate<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CircleLayoutDelegate</span><span class=\"token punctuation\">(</span>\n                  maxMoveDistance<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n                  moveDistance<span class=\"token punctuation\">:</span> dis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              child<span class=\"token punctuation\">:</span> child<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Center</span><span class=\"token punctuation\">(</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Container</span><span class=\"token punctuation\">(</span>\n              width<span class=\"token punctuation\">:</span> circleSize<span class=\"token punctuation\">,</span>\n              height<span class=\"token punctuation\">:</span> circleSize<span class=\"token punctuation\">,</span>\n              decoration<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\">BoxDecoration</span><span class=\"token punctuation\">(</span>\n                  shape<span class=\"token punctuation\">:</span> <span class=\"token class-name\">BoxShape</span><span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Colors</span><span class=\"token punctuation\">.</span>redAccent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这些代码只是简单的 Widget 组合，关键是 <code>CustomSingleChildLayout</code> 及其 delegate。<code>CustomSingleChildLayout</code> 现在有两个参数，<code>moveDistance</code> 表示手势移动的距离，<code>maxMoveDistance</code> 表示最大可移动距离。手指移动时，<code>moveDistance</code> 会增加，手指放开后，<code>moveDistance</code> 会清零，圆会归位。控制圆的移动的逻辑在 CircleLayoutDelegate 内：</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CircleLayoutDelegate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SingleChildLayoutDelegate</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">final</span> double maxMoveDistance<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">final</span> double moveDistance<span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">CircleLayoutDelegate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>maxMoveDistance<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>moveDistance<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  bool <span class=\"token function\">shouldRelayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">covariant</span> <span class=\"token class-name\">SingleChildLayoutDelegate</span> oldDelegate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> oldDelegate<span class=\"token punctuation\">.</span>moveDistance <span class=\"token operator\">!=</span> moveDistance<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token class-name\">Offset</span> <span class=\"token function\">getPositionForChild</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Size</span> size<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Size</span> childSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> moveDistance<span class=\"token punctuation\">.</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>maxMoveDistance<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>委托必须实现的方法是 <code>shouldRelayout</code>，它的返回值决定了布局会不会被重新计算，一般会比较每个属性有没有被修改。这里最主要的是通过重写 <code>getPositionForChild</code> 修改子节点的位置偏移。</p>\n<p>现在运行代码已经能够达到上面的演示效果。<a href=\"https://dartpad.dev/?id=ddf18cb4c46beaa07e3a8abc0998dd0a&null_safety=true\">点击查看</a> 当前阶段完整代码。 </p>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><p>现在圆的大小是通过设置 Container 的宽高控制的，不过也可以使用委托自身决定大小，去掉 Container 的尺寸设置，在 <code>CircleLayoutDelegate</code> 中使用 <code>getConstraintsForChild</code> 决定子节点的约束：</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token class-name\">BoxConstraints</span> <span class=\"token function\">getConstraintsForChild</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BoxConstraints</span> constraints<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">BoxConstraints</span><span class=\"token punctuation\">.</span><span class=\"token function\">loose</span><span class=\"token punctuation\">(</span>constraints<span class=\"token punctuation\">.</span><span class=\"token function\">constrain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Size</span><span class=\"token punctuation\">.</span><span class=\"token function\">square</span><span class=\"token punctuation\">(</span>circleSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>现在圆的大小依然是对的。CustomSingleChildLayout 默认的约束是尽量撑开，所以圆的位置跑到左上角去了。这里演示两种方式修正这个问题，第一种方式是在计算子节点位置时算上偏移量：</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token metadata function\">@override</span>\n<span class=\"token class-name\">Offset</span> <span class=\"token function\">getPositionForChild</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Size</span> size<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Size</span> childSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> size<span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>childSize<span class=\"token punctuation\">.</span><span class=\"token function\">center</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Offset</span><span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n      <span class=\"token class-name\">Offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> moveDistance<span class=\"token punctuation\">.</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>maxMoveDistance<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><a href=\"https://dartpad.dev/?id=9239524e218ede1100f436e8de59e957&null_safety=true\">点击查看</a> 当前阶段完整代码。 </p>\n<p>为了演示目的，提一下 <code>getSize</code>，通过重写 <code>getSize</code> 可以决定 <code>CustomSingleChildLayout</code> 自身的大小：</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token metadata function\">@override</span>\n<span class=\"token class-name\">Size</span> <span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BoxConstraints</span> constraints<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> constraints<span class=\"token punctuation\">.</span><span class=\"token function\">constrainDimensions</span><span class=\"token punctuation\">(</span>circleSize<span class=\"token punctuation\">,</span> circleSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>实际上这个时候 <code>CustomSingleChildLayout</code> 的约束是 h &#x3D; 200，看过去刚好也是居中。在 <code>CustomSingleChildLayout</code> 父级加一层 <code>UnconstrainedBox</code> 使它的高度变成 circleSize。</p>\n<p><a href=\"https://dartpad.dev/?id=587e0dd291a89492c6c9b2745778fb67&null_safety=true\">点击查看</a> 当前阶段完整代码。 </p>\n","text":" CustomSingleChildLayout 可以使其唯一的子节点的布局遵循一个委托。 委托可以确定子组件的布局约束，并决定将子组件放置在何处。委托还可以确定父级的大小，但父类的大小不会取决于子类的大小。 在位置超出布局约束后，子节点依然会被渲染，但是它的手势交互还会停留再原...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Dart/Flutter","slug":"Dart-Flutter","count":3,"path":"api/categories/Dart-Flutter.json"}],"tags":[{"name":"Flutter","slug":"Flutter","count":2,"path":"api/tags/Flutter.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">优化</span></a></li></ol>","author":{"name":"皓月之明","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"进无止境","socials":{"github":"https://github.com/hyzmm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"坐标空间转换","uid":"097b62684ec7fde752270b87461aa896","slug":"math-matrix-coordinates_transformation","date":"2021-12-27T11:26:14.000Z","updated":"2022-07-17T12:07:09.348Z","comments":true,"path":"api/articles/math-matrix-coordinates_transformation.json","keywords":null,"cover":"/images/cover/black_hole_8-wallpaper-960x540.jpg","text":"渲染引擎在进行最终的画面绘制时，都需要确定一个子节点应该在屏幕上的什么位置。或者开发者有时还需要知道父节点的一个节点在子空间的什么位置。这些场景需要用到坐标空间的转换，在渲染引擎中，这些空间转换是通过矩阵完成的。例如常见的 toLocal 和 toGlobal 接口所做事情。 子...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"数学","slug":"数学","count":1,"path":"api/categories/数学.json"}],"tags":[{"name":"矩阵","slug":"矩阵","count":1,"path":"api/tags/矩阵.json"}],"author":{"name":"皓月之明","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"进无止境","socials":{"github":"https://github.com/hyzmm","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}